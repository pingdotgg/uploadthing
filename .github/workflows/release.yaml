name: Release
on:
  push:
    branches:
      - main

env:
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  TURBO_TEAM: ${{ secrets.TURBO_TEAM }}

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup
        uses: ./tooling/gh-actions/setup

      - name: Check packages for common errors
        run: bun turbo --filter "./packages/*" build lint test typecheck

      # Using custom token `MY_GITHUB_TOKEN` with more access to avoid rate limiting
      - name: Create Release
        id: changeset
        uses: changesets/action@v1.4.1
        with:
          commit: "chore(release): ðŸ“¦ version packages"
          title: "chore(release): ðŸ“¦  version packages"
          publish: npx changeset publish
        env:
          GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Send a discord notification
        if: steps.changeset.outputs.published == 'true'
        uses: actions/github-script@v7
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
        with:
          github-token: ${{ secrets.MY_GITHUB_TOKEN }}
          script: |
            fetch(process.env.DISCORD_WEBHOOK_URL, {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json'
              },
              body: JSON.stringify({
                content: `New release available. [Read the changelog](https://github.com/pingdotgg/uploadthing/releases)`
              }),
            })
            .then((res) => {
              console.log('Sent discord notification', res)
            })
            .catch((err) => {
              console.error('Error sending discord notification', err)
            })

      - name: Revalidate banner on dashboard
        if: steps.changeset.outputs.published == 'true'
        uses: actions/github-script@v7
        env:
          PING_GH_SIGNING_SECRET: ${{ secrets.PING_GH_SIGNING_SECRET }}
        with:
          github-token: ${{ secrets.MY_GITHUB_TOKEN }}
          script: |
            fetch("https://uploadthing.com/api/revalidate-npm-tag", {
              method: "POST",
              headers: {
                "Content-Type": "application/json",
                "x-ping-signature": process.env.PING_GH_SIGNING_SECRET,
              },
            })
            .then(async (res) => {
              console.log("Version revalidated", await res.text());
            })
            .catch((err) => {
              console.error("Error revalidating tag", err);
            });
