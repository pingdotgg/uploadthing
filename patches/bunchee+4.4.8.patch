diff --git a/node_modules/bunchee/dist/bin/cli.js b/node_modules/bunchee/dist/bin/cli.js
index 732cb6c..bcd1d5d 100755
--- a/node_modules/bunchee/dist/bin/cli.js
+++ b/node_modules/bunchee/dist/bin/cli.js
@@ -823,6 +823,7 @@ function parseCliArgs(argv) {
         '--external': String,
         '--no-external': Boolean,
         '--no-clean': Boolean,
+        '--tsconfig': String,
         '--prepare': Boolean,
         '-h': '--help',
         '-v': '--version',
@@ -851,13 +852,14 @@ function parseCliArgs(argv) {
         external: !!args['--no-external'] ? null : args['--external'],
         clean: !args['--no-clean'],
         env: args['--env'],
+        tsconfigPath: args['--tsconfig'],
         prepare: !!args['--prepare']
     };
     return parsedArgs;
 }
 async function run(args) {
     var _args_external;
-    const { source, format, watch, minify, sourcemap, target, runtime, dts, env, clean } = args;
+    const { source, format, watch, minify, sourcemap, target, runtime, dts, env, clean, tsconfigPath } = args;
     const cwd = args.cwd || process.cwd();
     const file = args.file ? path__default.default.resolve(cwd, args.file) : undefined;
     const bundleConfig = {
@@ -872,6 +874,7 @@ async function run(args) {
         minify: !!minify,
         sourcemap: sourcemap === false ? false : true,
         env: (env == null ? void 0 : env.split(',')) || [],
+        tsconfigPath,
         clean
     };
     if (args.version) {
diff --git a/node_modules/bunchee/dist/index.js b/node_modules/bunchee/dist/index.js
index 8e062fa..cd00018 100644
--- a/node_modules/bunchee/dist/index.js
+++ b/node_modules/bunchee/dist/index.js
@@ -277,10 +277,10 @@ function resolveTypescriptHandler(cwd) {
     return ts;
 }
 const resolveTypescript = memoize(resolveTypescriptHandler);
-function resolveTsConfigHandler(cwd) {
+function resolveTsConfigHandler(cwd, filePath) {
     let tsCompilerOptions = {};
     let tsConfigPath;
-    tsConfigPath = path.resolve(cwd, 'tsconfig.json');
+    tsConfigPath = path.resolve(cwd, filePath ?? 'tsconfig.json');
     if (fileExists(tsConfigPath)) {
         const ts = resolveTypescript(cwd);
         const basePath = tsConfigPath ? path.dirname(tsConfigPath) : cwd;
@@ -1589,7 +1589,7 @@ async function bundle(cliEntryPath, { cwd: _cwd, ...options } = {}) {
     ;
     const hasBin = Boolean(pkg.bin);
     const isFromCli = Boolean(cliEntryPath);
-    let tsConfig = resolveTsConfig(cwd);
+    let tsConfig = resolveTsConfig(cwd, options.tsconfigPath);
     let hasTsConfig = Boolean(tsConfig == null ? void 0 : tsConfig.tsConfigPath);
     const defaultTsOptions = {
         tsConfigPath: tsConfig == null ? void 0 : tsConfig.tsConfigPath,
